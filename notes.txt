With info drawn from https://github.com/MAVProxyUser/DUMLrub/blob/master/CherryPicker.rb, Line 156
Thanks @hostile

How to create tarball that behaves same (no directory structure, name, ...) like original dji_system.bin and thus can be flashed with pyduml.py:
1.) micelwhave$ mkdir ./dji_system
2.) micelwhave$ gtar -cvf ~/dji_system.bin -C dji_system/ .

(I also made sure that in "https://extract.me" the structure of the new tarball looked
exactly the very same like that of the original dji_system.bin tar.)
3.) Copy new tarball into same directory where pyduml.py resides.
4.) Now the new dji_system.bin can be flashed with pyduml as usual.

Tested with 01.04.0300, rooted RC, using gnu-tar via homebrew on a Mac.

When flashing the bird, as of now it appears like the same firmware cannot be flashed twice as opposed to the
general recommendations. The pyduml tool failed with a 550 ftp error. Pyduml tool was used with python2.7 on a Mac.
When even the first flash failed altogether then for me the second flash was always successful.

For me in step 2 of https://github.com/o-gs/DJI_FC_Patcher python3 was necessary. A Mac was used for step 2.
Additionally, "pip3 install pycrypto" and "pip3 install configparser" had to be issued to successfully complete step 2.

For me in step 2 of https://github.com/o-gs/DJI_FC_Patcher I could as well open the "wm220.cfg.sig" file in
TextEdit.app on a Mac and copy the xml part including the very last empty line into VisualStudioCode.
The hash of the saved file was checked with md5sum and equal to a "wm220.cfg.ori" extract.

How ensure recording of .DAT files?
1.) In FileZilla connect to 192.168.42.2 on port 21 with "nouser", "nopass".
2.) Save FLY000.DAT all the way up to and including FLY{nnn-1}.DAT where FLYnnn.DAT denotes the
DAT file that's currently being recorded.
3.) Remove FLY000.DAT to FLY{nnn-1}.DAT.
4.) Repeat or perform above steps prior to a risky flight or test of modified firmware.
5.) Always turn on RC and then AC to prevent messing up the timestamps as described
in http://www.datfile.net/DatCon/retrieveV3Dat.html, "Picking the correct .DAT"! This
will in turn prevent writing into existing files.

How read .DAT files?
1.) adb pull FLY000.DAT to FLY{nnn-1}.DAT where FLYnnn.DAT denotes the DAT file that's currently being recorded.
2.) If you know which DAT files are consecutive while being from a single power-up then these
can be joined with cat FLY{xxx}.DAT FLY{xxx+1}.DAT FLY{xxx+n}.DAT>{YourOutputFile}.DAT.
3.) I was able to view the resulting files with CsrView for Mac from datfile.net. If motors were
armed the "Motor Speeds" SigPlayer did not display 0.

How push file: adb push /somefile.local /somefolder_remote/
